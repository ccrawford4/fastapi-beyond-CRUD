name: Nightly Build

on:
  # schedule:
  #   - cron: "*/5 * * * *"
  push:
    branches: main

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run pytest
    environment: main

    steps:
        - uses: actions/setup-python@v2
          with:
            python-version: '3.12'

        - name: Checkout
          uses: actions/checkout@v4

        - name: Pytest Action Step
          env: 
            DATABASE_URL: ${{ secrets.DATABASE_URL }}
            JWT_SECRET: ${{ secrets.JWT_SECRET }}
            JWT_ALGORITHM: ${{ secrets.JWT_ALGORITHM }}
            MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
            MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
            MAIL_SERVER: ${{ secrets.MAIL_SERVER }}
            MAIL_PORT: ${{ secrets.MAIL_PORT }}
            MAIL_FROM: ${{ secrets.MAIL_FROM }}
            MAIL_FROM_NAME: ${{ secrets.MAIL_FROM_NAME }}
            DOMAIN: ${{ secrets.DOMAIN }}
            REDIS_URL: ${{ secrets.REDIS_URL }}
          id: pytest
          uses: paolorechia/fast-pytest-github-action@develop
          with:
            pytest_args: 'src/tests'
            requirements_file: 'requirements.txt'

  push_to_registry:
    needs: test
    name: Push docker image to Docker Hub
    runs-on: ubuntu-latest
    environment:
      name: main
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ccrawford4/fastapi-crud-app
      
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}   

  release:
    runs-on: ubuntu-latest
    needs: push_to_registry
    environment:
      name: main

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4.1.1

    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
